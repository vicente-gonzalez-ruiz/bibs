@techreport{rosenberg2003simple,
  title={Simple Traversal of User Datagram Protocol Through Network Address Translation STUN},
  author={Rosenberg, J. and Weinberger, J. and Huitema, C. and Mahy, R.},
  year={2003},
  institution={RFC-3489}
}

@article{srisuresh1999ip,
  title={IP network address translator (NAT) terminology and considerations},
  author={Srisuresh, P. and Holdrege, M.},
  year={1999}
}
@article{senie2002network,
  title={{N}etwork {A}ddress {T}ranslator ({NAT}) - friendly application design guidelines},
  author={Senie, D.},
  year={2002}
}
@techreport{rosenberg2003stun,
  title={STUN-simple traversal of user datagram protocol (UDP) through network address translators (NATs)},
  author={Rosenberg, J. and Weinberger, J. and Huitema, C. and Mahy, R.},
  year={2003}
}

@article{jennings2007network,
  title={Network Address Translation (NAT) Behavioral Requirements for Unicast UDP (RFC 4787)},
  author={Jennings, C. and Audet, F.},
  journal={Network},
  year={2007}
}

@Inbook{Mueller2008,
    author="M{\"u}ller, A.
        and Klenk, A.
        and Carle, G.",
    editor="Das, Amitabha
        and Pung, Hung Keng
        and Lee, Francis Bu Sung
        and Wong, Lawrence Wai Choong",
    title="On the Applicability of Knowledge Based NAT-Traversal for Home Networks",
    bookTitle="NETWORKING 2008 Ad Hoc and Sensor Networks, Wireless Networks, Next Generation Internet: 7th International IFIP-TC6 Networking Conference Singapore, May 5-9, 2008 Proceedings",
    year="2008",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="264--275",
    isbn="978-3-540-79549-0",
    doi="10.1007/978-3-540-79549-0_23",
    url="http://dx.doi.org/10.1007/978-3-540-79549-0_23"
}

@Misc{NAT-types,
  author =   {},
  title =    {TUM - measr.net - NAT Types determined using the STUN Algorithm},
  howpublished = {http://web.archive.org/web/20170222003038/http://nattest.net.in.tum.de/results.php},
  month =    {February},
  year =     {2017}
}

@Misc{IDG-UPnP,
  author = 	 {Boucadair, M. and
                  Penno, R. and
		  Wing. D.},
  title = 	 {Universal Plug and Play (UPnP)
                  Internet Gateway Device -
		  Port Control Protocol Interworking Function
                  (IGD-PCP IWF)},
  howpublished = {https://tools.ietf.org/html/rfc6970},
  month = 	 {July},
  year = 	 {2013}
}

@Misc{TURN,
  OPTkey = 	 {},
  author = 	 {Mahy, R. and
                  Matthews, P. and
		  Rosenberg, J.},
  title = 	 {Traversal Using Relays around {NA}T ({TURN}):
                  Relay Extensions to Session Traversal Utilities
		  for NAT (STUN)},
  howpublished = {https://tools.ietf.org/html/rfc5766},
  month = 	 {April},
  year = 	 {2010}
}

@Misc{SN-traversal,
  author = 	 {Takeda, Y.},
  title = 	 {Symmetric NAT Traversal using STUN},
  howpublished = {https://tools.ietf.org/id/draft-takeda-symmetric-nat-traversal-00.txt},
  month = 	 {June},
  year = 	 {2003}
}

@Misc{STUN,
  author = 	 {Rosenberg, J. and
                  Mahy, R. and
		  Matthews, P. and
		  Wing, D.},
  title = 	 {Session Traversal Utilities for NAT (STUN)},
  howpublished = {https://tools.ietf.org/html/rfc5389},
  month = 	 {October},
  year = 	 {2008}
}

@InProceedings{new-method-SNT,
  author = 	 {Wei, Y. and
                  Yamada, D. and
		  Yoshida S. and
		  Goto, S.},
  title = 	 {A New Method for Symmetric NAT Traversal in UDP and TCP},
  booktitle =    {APAN Network Research Workshop},
  year = 	 {2008},
  pages = 	 {11 - 18},
}

@Misc{SIP,
  author = 	 {Rosenberg, J. and
                  Schulzrinne, H. and
                  Camarillo, G. and
                  Johnston, A. and
                  Peterson, J. and
                  Sparks, R. and
                  Handley, M. and
                  Schooler, E.},
  title = 	 {SIP: Session Initiation Protocol},
  howpublished = {https://tools.ietf.org/html/rfc3261},
  month = 	 {June},
  year = 	 {2002},
  note =         {Numerous protocols have been authored that carry
                  various forms of real-time multimedia session data
                  such as voice, video, or text messages.  The Session
                  Initiation Protocol (SIP) works in concert with
                  these protocols by enabling Internet endpoints
                  (called user agents) to discover one another and to
                  agree on a characterization of a session they would
                  like to share.  For locating prospective session
                  participants, and for other functions, SIP enables
                  the creation of an infrastructure of network hosts
                  (called proxy servers) to which user agents can send
                  registrations, invitations to sessions, and other
                  requests. SIP is an application-layer control
                  protocol that can establish, modify, and terminate
                  multimedia sessions (conferences) such as Internet
                  telephony calls.}
}

@ARTICLE{SIP-challenges,
  author =       {Gurbani, Vijay K. and
                  Jain, Rajnish},
  journal =      {Bell Labs Technical Journal},
  title =        {Contemplating some open challenges in SIP},
  year =         {2004},
  volume =       {9},
  number =       {3},
  pages =        {255-269},
  abstract =     {Session Initiation Protocol (SIP), despite its
                  beginnings as a protocol for multimedia session
                  signaling over the Internet, has rapidly evolved as
                  a prominent signaling protocol for Internet
                  telephony. While most efforts to evolve the protocol
                  have resulted in greater simplicity, flexibility,
                  and extensibility, some uncoordinated efforts have
                  engendered a few open challenges for the protocol
                  implementers. In this paper, we contemplate some of
                  these challenges, including the 3rd Generation
                  Partnership Project's (3GPP's) use of SIP,
                  flexibility in the service model, lack of
                  ratification of user/application interaction model,
                  and network address translator (NAT) traversal. In
                  analyzing these issues, it is important to recognize
                  two facts early. First, some of these issues are
                  inherent in Internet telephony in general and are
                  not endemic to SIP. Second, although standards
                  bodies are attempting to address most of these
                  issues, competing and proprietary implementations
                  are emerging to the detriment of the entire SIP
                  community.  NAT Traversal In recent years, NATs have
                  gained widespread ac- ceptance as an interim
                  solution to combat both IPv4 address depletion and
                  scaling in routing. NATs con- serve IPv4 address
                  space by allowing globally regis- tered IP addresses
                  to be reused or shared by several hosts. NATs create
                  the illusion of fewer hosts by over- writing parts
                  of IP and transport headers, and that makes it
                  harder (if not impossible) for many applica- tion
                  protocols such as SIP and H.323 [16] to traverse
                  NATs. Given the ubiquitous presence of NATs, SIP and
                  the media flows it establishes must be able to
                  traverse NATs if SIP is to be a viable signaling
                  protocol in the public Internet. NATs are currently
                  attractive because they offer a simple, economical
                  way for conserving IPv4 addresses and because they
                  can be installed incrementally, without changes to
                  either hosts or routers. However, NATs introduce
                  several inherent problems and limitations,
                  including: • Security limitations (because NATs
                  typically can- not examine or overwrite encrypted
                  information), • Inability to provide optimal
                  performance in dense traffic matrices, •
                  Unconditional hiding of host identity, • Increased
                  potential for misaddressing, • Inability to examine
                  and overwrite realm-specific IP addresses in many
                  application protocols, and • Failed or error-prone
                  communication upon IP fragmentation.  NAT Traversal:
                  In recent years, NATs have gained widespread ac-
                  ceptance as an interim solution to combat both IPv4
                  address depletion and scaling in routing. NATs con-
                  serve IPv4 address space by allowing globally regis-
                  tered IP addresses to be reused or shared by several
                  hosts. NATs create the illusion of fewer hosts by
                  over- writing parts of IP and transport headers, and
                  that makes it harder (if not impossible) for many
                  applica- tion protocols such as SIP and H.323 [16]
                  to traverse NATs. Given the ubiquitous presence of
                  NATs, SIP and the media flows it establishes must be
                  able to traverse NATs if SIP is to be a viable
                  signaling protocol in the public Internet. NATs are
                  currently attractive because they offer a simple,
                  economical way for conserving IPv4 addresses and
                  because they can be installed incrementally, without
                  changes to either hosts or routers. However, NATs
                  introduce several inherent problems and limitations,
                  including: • Security limitations (because NATs
                  typically can- not examine or overwrite encrypted
                  information), • Inability to provide optimal
                  performance in dense traffic matrices, •
                  Unconditional hiding of host identity, • Increased
                  potential for misaddressing, • Inability to examine
                  and overwrite realm-specific IP addresses in many
                  application protocols, and • Failed or error-prone
                  communication upon IP fragmentation.  SIP is a
                  NAT-sensitive protocol that, out of neces- sity,
                  defies RFC 3235 [34]. It carries realm-specific IP
                  addresses or domain name server (DNS) names, as well
                  as port information, in the application-level IP
                  payload, and because SIP typically establishes a
                  media session, the NATs in the network path are
                  unable to correlate the SIP control session with the
                  media ses- sion. In addition, IP fragmentation is a
                  necessary evil that makes it difficult and sometimes
                  impossible to traverse NATs. IP fragmentation can
                  either occur at the originating endpoint, such as
                  when SIP messages larger than the path maximum
                  transmission unit (MTU) size are transported over
                  UDP or in the inter- mediary network, regardless of
                  the transport protocol.  When IP fragmentation of a
                  SIP message occurs, the trailing IP fragments of the
                  message lack the trans- port protocol port numbers,
                  which are typically ex- amined and replaced by
                  NATs. The issue of NAT and firewall traversal is a
                  com- plicated one for SIP. The problem presents
                  itself in the form of diverse scenarios [25]
                  depending on the network topology and the type of
                  NAT, and the prob- lem must be solved for both the
                  signaling and media flows. The lack of a coherent
                  solution is partially due to the multitude of
                  proposed solutions, including: • Simple Traversal of
                  UDP Through NAT (STUN) protocol [30], • Traversal
                  using relay NAT (TURN) [24], • SIP Application Layer
                  Gateways (ALGs), • Middlebox Communication (MIDCOM)
                  protocol [35], • SIP Symmetric Response Routing, RFC
                  3581 [27], • Media Gateway Control Protocol (MGCP)
                  [2] controlled firewalls, • Virtual private networks
                  (VPNs) [17], • Firewall Enhancement Protocol, RFC
                  3093 [9], • Universal Plug and Play (UPnP)* [36],
                  and • Interactive Connectivity Establishment (ICE)
                  [22]. As a backdrop for discussing the solutions, we
                  as- sume a network configuration where a
                  NAT/firewall separates a private network from the
                  public network and where a call is initiated from a
                  private network SIP UA to a public network SIP UA.
                  Figure 4 shows MIDCOM, UPnP, STUN, TURN, ALG, and
                  VPN solu- tions of the NAT problem over the assumed
                  network configuration. SIP ALGs (or SIP-aware NATs)
                  are perhaps the technically easiest to deploy and
                  the most foolproof solution to the problem, next to
                  full-fledged migration to IPv6 that should
                  eventually rid the Internet of NATs and their
                  associated problems. SIP ALGs are essen- tially SIP
                  B2BUAs that process each SIP message to substitute
                  realm-specific addresses and to open ap- propriate
                  pinholes for network address translation of bearer
                  traffic. They do not require any extensions to SIP
                  or SDP, and they can be deployed without any
                  enhancements to the SIP entities. Clearly, empower-
                  ing the NAT with SIP intelligence is very effective,
                  but due to the exhaustive SIP automata required for
                  the B2BUA functionality, SIP ALGs introduce
                  latencies and impose scaling issues. In addition,
                  there is a huge installed base of NATs that are not
                  equipped with the SIP ALG functionality. Although,
                  SIP ALGs are not a definitive solution, they are
                  currently a popular solu- tion in the industry.  The
                  MIDCOM solution is similar to the ALG so- lution,
                  except that in MIDCOM the application layer protocol
                  intelligence is not built into the NAT/firewall.
                  Instead, this intelligence is build into a MIDCOM
                  agent that dynamically controls MIDCOM-enabled NATs
                  to open pinholes for signaling and media flows.  The
                  main advantage with this technique is that, once
                  MIDCOM-enabled, the NATs/firewalls need not be
                  continually upgraded to support diverse application
                  layer protocols. However, upgrading existing NATs to
                  support MIDCOM is a difficult task.  The VPN
                  solution achieves firewall/NAT traversal by
                  tunneling both media and signaling through the
                  existing firewall/NAT installations to a public
                  address space server. This tunnel termination server
                  modifies SIP signaling to reflect its outbound port
                  details, thus allowing it to make both outgoing and
                  incoming calls.  The VPN solution has the drawbacks
                  that it introduces latencies in signaling and media
                  flows and that the external server is vulnerable to
                  security attacks.  Most other NAT traversal
                  solutions share a com- mon theme, which is that they
                  attempt to make SIP NAT friendly by extending it and
                  augmenting it with other protocols that allow a SIP
                  UA behind the NAT to discover the public IP
                  address/port used by the NAT.  This allows the SIP
                  UA to establish sessions using pub- lic, routable
                  addresses and ports and ensures end-to- end
                  connectivity. A SIP UA’s request to discover the
                  NAT’s public IP address and port can be answered by
                  either the NAT itself or by a server running in the
                  public network.  Microsoft’s UPnP relies on NAT to
                  respond to the discovery request and open pinholes
                  under the dy- namic control of the UPnP client. For
                  this to work, the SIP UA and NAT must be UPnP
                  enabled. While UPnP allows simple configurations,
                  its disadvantages include failure under cascaded
                  NATs, weakened firewall security, and the tall task
                  of upgrading cur- rently deployed NATs and SIP
                  entities with UPnP.  The STUN protocol 30] enables a
                  SIP client to discover whether or not it is behind a
                  NAT and to determine the type of NAT. The
                  STUN-enabled client sends an exploratory message to
                  the external STUN server to determine the details of
                  the public side of the NAT. The STUN server derives
                  the information from the ingress request and informs
                  the client which public IP address and ports were
                  used by the NAT. The client can use this information
                  to con- struct a SIP request containing public IP
                  addresses and port numbers. The STUN server acts as
                  a lookup server and does not participate in the
                  signaling or media flows. The STUN protocol
                  inherently assumes that the binding in NAT is
                  oblivious to the destina- tion IP address and port
                  number. While this assumption works with full cone,
                  restricted cone, and port-restricted cone NATs, it
                  fails with symmet- ric NATs. The inability to
                  support the most common NAT type, the symmetric NAT,
                  is the biggest draw- back of STUN. The TURN [24]
                  protocol solves the problem of media traversal
                  through symmetric NATs. TURN relies on a server that
                  is inserted in the media path. The TURN server is
                  located either in the customer’s de- militarized
                  zone (DMZ) or in the service provider network. The
                  TURN-enabled SIP client sends an ex- ploratory
                  packet to the TURN server, which responds with the
                  public IP address and port used by the NAT to be
                  used for this session. This information is used in
                  the SIP call establishment messages and for subse-
                  quent media streams. The advantage of this approach
                  is that there is no change in the destination
                  address seen by the NAT, so symmetric NATs can be
                  used.  However, TURN, like STUN, requires existing
                  SIP UAs to be upgraded. There is considerable
                  reluctance by client vendors to undertake this work,
                  making STUN and TURN unsuitable solutions. As
                  described earlier, the NAT traversal problem for SIP
                  is twofold, involving traversal of SIP signaling
                  itself and traversal of RTP media. RFC 3581 [27]
                  explores a solution for SIP over UDP traversal
                  through NAT, using a technique called symmetric
                  response routing. It in- troduces a new parameter
                  for the Via header field, named “rport,” that allows
                  a client to request that the server send the
                  response back to the source IP address and port
                  where the request originated, as opposed to using
                  the port number in the topmost Via header field
                  value of the request.  NATs impose an important, but
                  complicated, problem for SIP traversal. The
                  disparate design at- tempts have provoked both
                  thought and confusion.  The implementers are left
                  wondering about the best solution to adopt in the
                  changing landscape of solu- tions. Recent work on
                  ICE [22] is an attempt to define a generic
                  methodology that builds upon the strengths of the
                  earlier individual solutions to offer a single co-
                  hesive solution. ICE does not propose any extensions
                  to STUN or TURN, but extends SDP (adds the alt at-
                  tribute) in order to solve the RTP media traversal
                  problem NATs are short-term solutions for conserving
                  IPv4 address space by share and reuse of public IP
                  addresses, but they bear serious consequences for
                  SIP. Several so- lutions have emerged to allow SIP
                  traversal through NAT, each suiting a given network
                  topology, but there is no uniform solution that
                  meets all needs. Fortunately, the ICE architecture
                  attempts to collate the disparate solutions into a
                  single methodology, but the document describing the
                  methodology is far from RFC status, and its claims
                  are yet to be proven. Anyhow, it is imperative to
                  solve the SIP NAT traversal problem, as NATs will be
                  needed until complete migration to IPv6.},
  doi =          {10.1002/bltj.20054},
  ISSN =         {1089-7089}
}

@Article{SIP-evaluation,
  author = 	 {Chatterjee, S. and
                  Tulu, B. and
		  Abhichandani, T. and
		  Haiqing Li},
  title = 	 {SIP-based enterprise converged networks for voice/video-over-IP: implementation and evaluation of components},
  journal = 	 {Selected Areas in Communications},
  year = 	 {2005},
  volume = 	 {23},
  number = 	 {10},
  pages = 	 {1921-1933},
  month = 	 {October},
  doi =          {10.1109/JSAC.2005.854118},
  ISSN =         {0733-8716},
  abstract =     {The next generation of enterprise networks is
                  undergoing major changes as a plethora of new
                  architectures, applications, and services begin to
                  roll out within businesses. In general, the world of
                  voice/telephony, video, and data are "converging"
                  into a global communications network. The purpose of
                  this paper is twofold. First, the design, analysis,
                  and performance of a session initiation protocol
                  (SIP)-based videoconferencing desktop client, which
                  has been developed and deployed over Internet2, is
                  presented. Second, a guideline for managing
                  SIP-based services to be deployed within
                  enterprises, which addresses several challenges in
                  each layer, such as network address translator
                  (NAT)/FW issues, directory service integration
                  issues, and interoperability issues, is
                  proposed. Several detailed experimental results
                  related to interoperability and conformance that
                  were carried out are presented. Findings of
                  extensive SIP/NAT traversal analysis through network
                  traffic measurements are reported. The lessons
                  learned from both the design of a new SIP-based
                  voice/video client, as well as management challenges
                  with enterprise deployment are highlighted.  n this
                  paper, we focus on issues regarding the design,
                  deployment, and management of “converged” enterprise
                  net- works using the session initiation protocol
                  (SIP) [1] as the signaling platform. SIP, which is
                  an Internet Engineering Task Force (IETF) standard
                  for Internet Protocol (IP) Telephony, has received
                  much attention recently and seems to be the most
                  promising candidate as a signaling protocol for the
                  current and future IP telephony services, video
                  services and integrated web and multimedia
                  services. While SIP is new and actual deploy- ment
                  experiences are fewer, it is widely expected that
                  future enterprise networks will incorporate SIP for
                  its simplicity, flexibility, and built in security
                  features. We note that H.323 [2] is also another
                  signaling platform to build enterprise converged
                  services.  Instead of debating between the two
                  protocols, we refer the readers to interesting
                  literature on their comparison [3]–[5]. The
                  challenge of traversing NAT and/or fi rewalls is
                  still a barrier for VVoIP deployments [14]. NAT
                  and/or fi rewalls pose two challenges for these
                  technologies. First, if NAT is placed between a
                  SIP-based user agent (UA) and the Internet, the UA
                  is allotted a private network address, which is not
                  valid in the Internet. As a result, contact
                  information (IP address and port number) is invalid
                  for the external networks and responses from
                  external proxy servers may not reach the UA. Another
                  challenge We have tested the performance of some
                  existing NAT/ fi re- wall solutions using network
                  traf fi c analysis techniques.  We have analyzed and
                  evaluated three popular solutions for SIP over NAT
                  traversal, which are: 1) an IETF Standard called
                  Simple Traversal of User Datagram Protocol (UDP)
                  through Network Address Translators (NATs) (STUN)
                  [23]; 2) Uni- versal Plug and Play (UPnP) [24]; and
                  3) a proprietary solution by Ridgeway Systems, Inc.,
                  — IPFreedom ™ [25]. Even though other solutions have
                  been proposed by IETF such as r-port [26] and MIDCOM
                  [27], the common deployment of these three solutions
                  motivated the choice of selection.  Another recent
                  solution, Interactive Connectivity Establishment
                  (ICE) [28] was not tested, as there were no
                  implementations available at the time. A.  Brief
                  Overview of STUN, UPnP, and IPFreedom ™ Solutions
                  STUN [23] is used to resolve whether a UA is behind
                  a NAT and if it is, the type of that
                  NAT. Implementing a solution for STUN requires a
                  STUN server external to the network that is being
                  protected behind a NAT and a STUN-enabled client on
                  a SIP device. A STUN-enabled UA requests external IP
                  and port that it can use to form SIP headers when it
                  initiates a session with another UA placed external
                  to the network. These ports are related to SIP
                  signaling, as well as media.  UPnP [24], targeted at
                  small-business users and residential installations
                  [29], has been popularized by Microsoft. It is an
                  extension of Device Plug and Play (PnP) providing a
                  solution for traversing NAT for communication with
                  external networks.  It includes the entire network,
                  enabling discovery and control of devices, including
                  networked devices and services, such as net-
                  work-attached printers, Internet gateways, and
                  consumer elec- tronics equipment [24]. This
                  solution, unlike STUN, does not require a server
                  outside the network, but it requires a UPnP-en-
                  abled NAT device and a UPnP-enabled SIP UA.
                  IPFreedom [25] is a solution proposed by Ridgeway
                  Systems for traversing VVoIP over NAT and fi
                  rewalls.  This solution works for all types of NAT ’
                  s and fi rewalls. It does not require con fi
                  guration modi fi cations on fi rewall or a NAT
                  device.  In this solution, a UA in private network
                  establishes outbound communication connections
                  through the NAT with a Ridgeway server on the public
                  network.  Signaling messages are trans- mitted
                  through the server via TCP tunneling and media
                  packets are transmitted over user datagram protocol
                  (UDP) connec- tions.  Further, IPFreedom solution
                  requires colocation of an IPFreedom client and SIP
                  UA. The user needs to con fi gure the SIP UA to use
                  the IPFreedom client. This solution can be used with
                  various UAs without any modi fi cations. Through our
                  analysis, we have found that STUN [23] is effective
                  but does not provide a solution for all types of NAT
                  or fi rewall deployments. UPnP [24] is a popular
                  solution for small of fi ce/home of fi ce
                  networks. However, it forces serious delays in the
                  processing of messages and increases delay signi fi
                  cantly.  IPFreedom is a proprietary solution that
                  could work with most types of NATs and fi
                  rewalls. Nonetheless, it generates traf fi con the
                  network due to TCP tunneling between entities. E },
  keywords =     {Internet telephony;business communication;computer
                  network management;middleware;open
                  systems;telecommunication security;telecommunication
                  traffic;teleconferencing;transport
                  protocols;Internet2;NAT traversal analysis;SIP-based
                  enterprise converged network;component
                  evaluation;global communications
                  network;interoperability;middleware;network address
                  translator;network security;network traffic
                  measureme nt;session initiation
                  protocol;videoconferencing desktop
                  client;voice-video
                  client;voice-video-over-IP;Circuits;Costs;Global
                  communication;Internet telephony;Network address
                  translation;Next generation
                  networking;Protocols;Telecommunication
                  traffic;Teleconferencing;Web and internet
                  services;Architectures;middleware;security;session
                  initiation protocol
                  (SIP);videoconferencing;voice-over-Internet protocol
                  (VoIP)}
}

@ARTICLE{Peer-streaming-review,
  author =       {Narayanan, S.R. and
                  Braun, D. and
                  Buford, J. and
	          Fish, R.S. and
	          Gelman, A.D. and
	          Kaplan, A. and
	          Khandelwal, R. and
	          Shim, E. and
	          Yu, H.},
  journal =      {Communications Magazine, IEEE},
  title =        {Peer-to-peer streaming for networked consumer electronics [Peer-to-Peer Multimedia Streaming]},
  year =         {2007},
  volume =       {45},
  number =       {6},
  pages =        {124-131},
  abstract =     {Applications such as multimedia communications and
                  entertainment make media streaming a key feature for
                  peer-to-peer (P2P) technology embedded in networked
                  consumer electronics. In this article, we discuss
                  some key issues that are relevant to enabling
                  peer-to-peer streaming in networked consumer
                  electronics and address possible technical solutions
                  to the issues of interoperability, NAT/firewall
                  traversal, and codec inflexibility. We also address
                  how to improve overall system performance by
                  introducing a notion of node coordinates into the
                  discovery of services on a P2P network and confirm
                  the effectiveness of our approach using
                  simulation. We conclude with a discussion of our
                  prototype CE-oriented P2P streaming system.
                  NAT/Firewall Traversal More than 50 per- cent of
                  home broadband users are using NAT-capable routers
                  to share a public IP address among multiple devices
                  [2]. In corporate and public networks, firewalls are
                  commonly used for network security. During the
                  transition to IPv6, the ability to communicate
                  seamlessly in the presence of NAT routers will be
                  crucial to the success of P2P streaming. Finally,
                  due to the sheer number of CE devices, the NAT
                  traversal mechanism must be highly scalable. In
                  addition, since most NAT/firewall devices block UDP
                  (user datagram protocol) ports, the ability of
                  applications to transmit streams using TCP is
                  required to traverse NAT/firewall devices. When TCP
                  streaming is used, the dynamics of the TCP
                  flow-control mechanism could lead to variation in
                  the effective data rate experienced by a streaming
                  application. This, along with natural variations in
                  the underlying network throughput, will require
                  clients used for streaming to be adaptable.
                  NAT/Firewall Traversal When a NAT/firewall device is
                  present in the path between two devices, typically
                  incoming traffic originating from a distrusted
                  public domain is allowed only if a device within the
                  trusted private domain initiated the session. A
                  NAT/firewall traversal mechanism for establishing
                  secure two-way communication between devices and/or
                  applications is required to overcome this
                  restriction.  Most known solutions for NAT/firewall
                  traversal, such as ICE (interactive connectivity
                  establishment) [4], require a relay server, often
                  referred to as a media relay, outside a NAT/fire-
                  wall that can assist the device behind the
                  NAT/firewall with its communication
                  requirements. When a media relay is used, a device
                  behind a NAT/firewall establishes and maintains a
                  connection with a media relay, and the media relay
                  allocates a port number to the device. Then the
                  device publishes the address and port number of the
                  media relay as its contact information. Upon
                  receiving a packet on the port, the media relay
                  forwards the packet to the associated device using
                  the connection maintained by the device.
                  Peercasting. The efficient proximal node discovery
                  algorithm can be used in application scenarios other
                  than VoIP. Peercasting is one such application,
                  since it uses application layer multicasting (ALM)
                  to achieve multicast transmission of a media
                  stream. In ALM, an overlay network is built on top
                  of available network services. The multicast group
                  members are connected via the overlay network. Easy
                  deployment and lower server bandwidth requirements
                  are the two most noticeable advantages of ALM. The
                  primary drawback to ALM is that it is not as
                  efficient as IP-based multicast. Specifically, ALM
                  incurs some delay and bandwidth penalties and may
                  exhibit multicast tree instability.  Castro et al.,
                  [10] compared multi-hop overlays and found that
                  incorporating topology awareness into the routing
                  algorithm and proximity into node address selection
                  generally improved multicast tree quality. Hence, to
                  improve multicast performance, we utilized our
                  proximal node discovery mechanism during join and
                  tree reformation operations.  In traditional ALM
                  systems, a peer that wants to join a multicast tree
                  contacts the source or a rendezvous node for the
                  particular multicast group, identified by its group
                  identifier (group-id). This source node then selects
                  a point of attachment for the peer to join the
                  tree. The selection could either be random or use an
                  ICS system where the source estimates distances
                  between the peer and possibly a large group of nodes
                  on the tree before selecting a proximal node. In
                  both cases, the source node or the rendezvous node
                  could become a bottleneck affecting the performance
                  of the join procedure. Using our proximal node
                  discovery algorithm, all nodes participating in the
                  multicast tree calculate their quadrant number at
                  different levels (L) and register themselves on the
                  overlay with a well-defined key, for example,
                  “peercast://< groupid, quadrant num- ber>,” at each
                  level. Now, based on the quadrant number of the peer
                  requesting to join the tree, a small subset of the
                  nodes from within the same quadrant can be selected
                  in a distributed fashion for estimation using ICS
                  and/or direct measurement.  },
  keywords =     {consumer electronics;media streaming;open
                  systems;peer-to-peer computing;NAT-firewall
                  traversal;codec inflexibility;interoperability;media
                  streaming;networked consumer
                  electronics;peer-to-peer streaming;Centralized
                  control;Codecs;Consumer electronics;Multimedia
                  systems;Network address translation;Peer to peer
                  computing;Protocols;Relays;Streaming
                  media;Throughput},
  doi =          {10.1109/MCOM.2007.374436},
  ISSN =         {0163-6804},
  month =        {June}
}

@ARTICLE{Management-of-NATted-devices,
  author =       {Choongul Park and
                  Kitae Jeong and
		  Sungil Kim and
		  Youngseok Lee},
  journal =      {Network, IEEE},
  title =        {NAT Issues in the Remote Management of Home Network Devices},
  year =         {2008},
  volume =       {22},
  number =       {5},
  pages =        {48-55},
  abstract =     {Currently, many customer devices are being connected
                  to home networks. For this reason, it is expected
                  that device management capabilities will be a
                  powerful instrument for the service provider to cope
                  with high maintenance costs, security concerns, and
                  management issues related to home networks. Through
                  DM, the service provider could provide valuable
                  services such as auto-provisioning, remote
                  configuration, firmware and software updates,
                  diagnostics, monitoring, scheduling, and fraud
                  management. However, network address translators
                  that are widely deployed in the home network
                  environment prohibit DM operations from reaching
                  user devices behind the NAT. In this article, we
                  focus on NAT issues in the management of home
                  network devices. Specifically, we discuss efforts
                  relating to standardization and present our proposal
                  to deploy DM services for VoIP and IPTV devices
                  behind NATs. By slightly changing the behavior of
                  Simple Network Management Protocol managers and
                  agents and by defining additional management objects
                  (MOs) to gather NAT binding information, we could
                  solve the NAT traversal problem under a symmetric
                  NAT. Moreover, we propose an enhanced method to
                  search for the UDP hole binding time of the NAT
                  box. For evaluation, we applied our method to 22
                  randomly selected VoIP devices out of 194 NATed
                  hosts in the real broadband network and achieved a
                  success ratio of 99 percent for exchanging SNMP
                  request messages and a 26 percent enhancement in
                  determining the UDP hole binding time. A NAT [1]
                  allows several computers to share a single public IP
                  address. Private IP addresses are assigned to hosts
                  behind a NAT, which means that communication between
                  hosts and the public Internet nodes pass through the
                  NAT, which maintains port and address translation
                  information. On the other hand, a NAT maintains a
                  table that maps the private addresses and the port
                  numbers to the public port numbers and IP
                  addresses. Thus, it is important to note that this
                  “binding” information could be initiated only by
                  outgoing traffic from the internal host. In
                  addition, most NATs maintain an idle timer for
                  several outgoing sessions and close the hole if no
                  traffic is observed for the given time period. },
  keywords = {IP networks;Internet telephony;broadband networks;consumer
                  products;digital television;home
                  computing;protocols;telecommunication network
                  management;telecommunication security;IPTV
                  device;SNMP;Simple Network Management Protocol;UDP
                  hole binding time;VoIP device;broadband network;home
                  network device management;network address
                  translator;remote customer device
                  management;security concern;Costs;Delta
                  modulation;Energy management;Home
                  automation;Instruments;Microprogramming;Network
                  address translation;Proposals;Remote
                  monitoring;Standardization},
  doi = {10.1109/MNET.2008.4626232},
  ISSN = {0890-8044},
  month={September}
}

@InProceedings{Autonomous-NAT-traversal,
  author = 	 {Muller, A. and
                  Evans, N. and
		  Grothoff, C.
		  and Kamkar, S.},
  title = 	 {Autonomous NAT Traversal},
  booktitle =    {International Conference on Peer-to-Peer Computing (P2P)},
  year = 	 {2010},
  pages = 	 {1-4},
  month = 	 {August},
  publisher =    {IEEE},
  abstract =     {Traditional NAT traversal methods require the help
                  of a third party for signalling. This paper
                  investigates a new autonomous method for
                  establishing connections to peers behind NAT. The
                  proposed method for autonomous NAT traversal uses
                  fake ICMP messages to initially contact the NATed
                  peer. This paper presents how the method is supposed
                  to work in theory, discusses some possible
                  variations, introduces various concrete
                  implementations of the proposed approach and
                  evaluates empirical results of a measurement study
                  designed to evaluate the efficacy of the idea in
                  practice. Recent studies have reported that up to
                  70\% of users access P2P networks from behind a NAT
                  system [2]. Unless configured otherwise (protocols
                  such as the Internet Gateway Device Protocol [3] are
                  counted as configuration in this context), almost
                  all NAT implementations refuse to forward inbound
                  traffic that does not correspond to a recent
                  matching outbound request. Configuration of the NAT
                  is not always an alternative; problems range from
                  end-user convenience and capabilities of the
                  specific NAT implementation to administrative
                  policies that may prohibit changes to the NAT
                  configuration (for example, due to security
                  concerns). Since NAT systems prohibit inbound
                  requests that do not match a previous outbound
                  request, all existing NAT traversal techniques
                  (aside from those changing the configuration of the
                  NAT system) that we are aware of require some amount
                  of active facilitation by a third party [4][5]. The
                  basic approach in most of these cases is that the
                  server in the private network behind the NAT is
                  notified by the third party that the client would
                  like to establish a connection. The server then
                  initiates the connection to the client. This
                  requires that the server maintains a connection to a
                  third party, that the client is able to locate the
                  responsible third party and that the third party
                  acts according to a specific protocol. THIS
                  ALGORITHM DOES NOT HANDLE SYMMETRIC NATS BECAUSE IT
                  ASUMMES THAT THE "CLIENT" CAN LEARN ITS IP ENDPOINT
                  USING TTL=1 ICMP ECHO REQUESTS, AN ENDPOINT THAT
                  DOEST NOT WORK WITH OTHER EXTERNAL PEERS.},
  keywords =      {peer-to-peer computing;ICMP messages;autonomous NAT
                  traversal;peer-to-peer network;Book reviews;IEEE
                  Communications Society;IP networks;Payloads;Peer to
                  peer computing;Security;Servers},
  doi =          {10.1109/P2P.2010.5569996}
}

@Article{NAT-classification,
  author = 	 {Muller, A. and
                  Carle, G. and
		  Klenk, A.},
  title = 	 {Behavior and classification of {NAT} devices and implications for {NAT} traversal},
  journal = 	 {Network, IEEE},
  year = 	 {2008},
  volume = 	 {22},
  number = 	 {5},
  pages = 	 {14-19},
  abstract =     {For a long time, traditional client-server
                  communication was the predominant communication
                  paradigm of the Internet. Network address
                  translation devices emerged to help with the limited
                  availability of IP addresses and were designed with
                  the hypothesis of asymmetric connection
                  establishment in mind. But with the growing success
                  of peer-to-peer applications, this assumption is no
                  longer true. Consequently network address
                  translation traversal became a field of intensive
                  research and standardization for enabling efficient
                  operation of new services. This article provides a
                  comprehensive overview of NAT and introduces
                  established NAT traversal techniques. A new
                  categorization of applications into four NAT
                  traversal service categories helps to determine
                  applicable techniques for NAT traversal. The
                  interactive connectivity establishment framework is
                  categorized, and a new framework is introduced that
                  addresses scenarios that are not supported by
                  ICE. Current results from a field test on NAT
                  behavior and the success ratio of NAT traversal
                  techniques support the feasibility of this
                  classification.------ Quick Preview Figures Full
                  Text Footnotes References Authors Cited By Keywords
                  Corrections When the Internet Protocol (IP) was
                  designed, the growth of the Internet to its current
                  size was not imaginable. Therefore, it was
                  reasonable to use a fixed 32-bit field to identify a
                  host based on its IP address. This limited address
                  range makes it impossible to assign globally unique
                  IPv4 addresses to the growing number of networked
                  devices. Furthermore, requesting an IP address for
                  every newly added device results in an unacceptable
                  administration overhead. The authors in [1] propose
                  to assign a number of public IP addresses to a
                  designated border router instead of configuring
                  certain hosts with addresses that can be routed
                  globally. The border router is then responsible for
                  translating IP addresses between the private and the
                  public domains, allowing as many simultaneous
                  connections as public IP addresses were
                  assigned. This allows a host within the local
                  network to access the Internet even though it has a
                  private IP address. This technique became known as
                  network address translation (NAT). Because the
                  translation of addresses breaks the end-to-end
                  connectivity model of the IP, newly developed
                  services following the peer-to-peer (P2P) paradigm
                  such as file sharing, instant messaging, and voice
                  over IP (VoIP) applications suffer from the
                  existence of NAT. Thus, NAT traversal is an
                  important problem today. And even in the future,
                  after a possible success of IPv6, companies and home
                  users still might deploy NAT devices to hide their
                  topologies from Internet service providers
                  (ISPs). There are two possible approaches to the
                  problem. One direction within the Internet
                  Engineering Task Force (IETF) Behave Working Group
                  [2] is to cope with existing NAT implementations and
                  to establish standards for the detection of NAT
                  behavior and for NAT traversal. On the other hand,
                  the IETF also standardizes behavioral properties for
                  NATs to work in conjunction with IETF protocols
                  (e.g., Datagram Congestion Control Protocol [DCCP],
                  Internet Control Message Protocol [ICMP], Stream
                  Control Transmission Protocol [SCTP]). Enterprise
                  class NATs are among the first to incorporate new
                  features introduced through
                  standardization. However, the large scale deployment
                  of residential gateways with NAT functionality
                  prohibits the change of NAT and requires the use of
                  protocols that work with existing NATs. This is also
                  the focus of this article, where we treat NATs as
                  black boxes rather than trying to change
                  them. ---------------------------------------------
                  NAT BEHAVIOR---------------------------------------
                  Today, a NAT device usually is used to share a
                  single public IP address among a number of private
                  end systems. The NAT maintains a table, listing all
                  connections between the public and the private
                  domains. For every connection attempt (e.g., a
                  Transmission Control Protocol synchronize [TCP SYN]
                  packet) coming from an internal host, the NAT
                  creates a new entry in the list. In NAT terminology
                  this entry is called a binding [3]. Each entry
                  contains the source IP address and the source
                  port. The NAT replaces the source IP address with
                  its public IP address. The source port is replaced
                  using one of the strategies explained later in this
                  section.  Although the concept of NAT was published
                  as early as 1994 [1], no common approach for NAT
                  emerged. Current NAT implementations not only differ
                  from vendor to vendor but also from model to model,
                  which leads to compatibility issues. If an
                  application works with one particular NAT, this does
                  not imply that it always works in a NATed
                  environment. Therefore, it is very important to
                  understand and classify existing NAT implementations
                  in order to design applications that can work in
                  combination with current NATs. The classification in
                  this article is mainly derived from simple traversal
                  of User Datagram Protocol (UDP) through NAT (STUN)
                  [4], whereas the address binding and mapping
                  behavior follows the terminology used in RFC 4787
                  [5]. This section covers only topics that are
                  required for the understanding of this article. A
                  detailed discussion and further information
                  (including test results) is given in [6] (for TCP)
                  and [5] (for UDP).  Binding covers “context based
                  packet translation” [7], which describes the
                  strategy the NAT uses to assign a public transport
                  address (combination of IP address and port) to a
                  new state in the NAT. Filtering, or packet discard,
                  shows how the NAT handles (or discards) packets
                  trying to use an existing mapping. Table 1 shows the
                  different categories and their possible
                  properties. Port binding describes the strategy a
                  NAT uses for the assignment. With port preservation,
                  the NAT assigns an external port to a new
                  connection; it attempts to preserve the local port
                  number if possible. Port overloading is problematic
                  and rarely occurs. A new connection takes over the
                  binding, and the old connection is dropped. Port
                  multiplexing is a very common strategy where ports
                  are demultiplexed based on the destination transport
                  address. Incoming packets can now carry the same
                  destination port and are distinguished by the source
                  transport address.  NAT binding deals with the reuse
                  of existing bindings. That is, if an internal host
                  closes a connection and establishes a new one from
                  the same source port, NAT binding describes the
                  assignment strategy for the new connection. As shown
                  in Table 1, the NAT binding is organized into three
                  categories. With Endpoint Independent, the external
                  port is only dependent on the source transport
                  address of the connection. As long as a host
                  establishes a connection from the same source IP
                  address and port, the mapping does not change. The
                  assignment is dependent on the internal and the
                  external transport address with the Address (Port)
                  Dependent strategy. As long as consecutive
                  connections from the same source to the same
                  destination are established, the mapping does not
                  change. As soon as we use a different destination,
                  the NAT changes the external port. With a Connection
                  Dependent binding, the NAT assigns a new port to
                  every connection. We distinguish between NATs that
                  increase the new port number by a specific (and well
                  predictable) delta and NATs that assign random port
                  numbers to the new mappings. Endpoint filtering
                  describes how existing mappings can be used by
                  external hosts and how a NAT handles incoming
                  connection attempts that are not part of a
                  response. Independent Filtering allows inbound
                  connections independent of the source transport
                  address of the packet. As long as the destination
                  transport address of a packet matches an existing
                  state, the packet is forwarded. With Address
                  Restricted Filtering, the NAT forwards only packets
                  coming from the same host (matching IP address) to
                  which the initial packet was sent. Address and Port
                  Restricted Filtering also compares the source port
                  of the inbound packet in addition to address
                  restricted filtering.-------------------------------
                  NAT TRAVERSAL PROBLEM-------------------------------
                  To work properly, the NAT must have access to the
                  protocol headers at layers 3 and 4 (in case of a
                  network address port translation
                  [NAPT]). Additionally, for every incoming packet,
                  the NAT must already have a state listed in its
                  table. Otherwise, it cannot find the related
                  internal host to which the packet belongs. According
                  to RFC 3027 [8], the NAT traversal problem can be
                  separated into three categories, which are presented
                  in this section. In addition to the three problems,
                  we identified Unsupported Protocols as a new
                  category.  The first problem occurs if a protocol
                  uses Realm-Specific IP Addresses in its
                  payload. That is, if an application layer protocol
                  such as the Session Initiation Protocol (SIP) uses a
                  transport address from the private realm within its
                  payload signalizing where it expects a
                  response. Because regular NATs do not operate above
                  layer 4, application layer protocols typically fail
                  in such scenarios. A possible solution is the use of
                  an application layer gateway (ALG) that extends the
                  functionality of a NAT for specific
                  protocols. However, an ALG supports only the
                  application layer protocols that are specifically
                  implemented and may fail when encryption is used.
                  The second category is P2P Applications. The
                  traditional Internet consists of servers located in
                  the public realm and clients that actively establish
                  connections to these servers. This structure is well
                  suited for NATs because for every connection attempt
                  (e.g., a TCP SYN) coming from an internal client,
                  the NAT can add a mapping to its table. But unlike
                  client-server applications, a P2P connection can be
                  initiated by any of the peers regardless of their
                  location. However, if a peer in the private realm
                  tries to act as a traditional server (e.g.,
                  listening for a connection on a socket), the NAT is
                  unaware of incoming connections and drops all
                  packets. A solution could be that the peer located
                  in the private domain always establishes the
                  connection. But what if two peers, both behind a
                  NAT, want to establish a connection to each other?
                  Even if the security policy would allow the
                  connection, it cannot be established.  The third
                  category is a combination of the first two. Bundled
                  Session Applications, such as File Transfer Protocol
                  (FTP) or SIP/Session Description Protocol (SDP),
                  carry realm-specific IP addresses in their payload
                  to establish an additional session. The first
                  session is usually referred to as the control
                  session, whereas the newly created session is called
                  the data session. The problem here is not only the
                  realm-specific IP addresses, but the fact that the
                  data session often is established from the public
                  Internet toward the private host, a direction the
                  NAT does not permit (e.g., active FTP).  Unsupported
                  Protocols are typically newly developed transport
                  protocols such as the SCTP or the DCCP that cause
                  problems with NATs even if an internal host
                  initiates the connection establishment. This is
                  because current NATs do not have built-in support
                  for these protocols. The unsupported protocols also
                  cover protocols that cannot work with NATs because
                  their layer 3 or layer 4 header is not available for
                  translation. This happens when using encryption
                  protocols such as IPSec.----------------------------
                  NAT TRAVERSAL SERVICE CATEGORIES--------------------
                  kk--------------------------------------------------
                  APPLICABILITY OF NAT TRAVERSAL TECHNIQUES FOR NAT
                  TRAVERSAL SERVICE CATEGORIES -----------------------
                  There are many different techniques for solving the
                  NAT traversal problem in specific scenarios, but
                  none of them provides a solution that works well
                  with all NATs, applications, and network
                  topologies. Another article explains many of the
                  available protocols for NAT traversal [14] in
                  general. This section describes the applicability of
                  existing techniques from the applications point of
                  view. ---------------------------------------------
                  Hole punching is an alternative if UPnP is not
                  applicable and works for NATs with an independent
                  filtering strategy. The mapping must be refreshed
                  periodically, for instance, by sending keep-alive
                  packets. For NATs other than full-cone,
                  hole-punching for GSP cannot be used because the
                  source port of the request is unknown in advance.--
                  COALESCING UNILATERAL AND COOPERATIVE APPROACHES FOR
                  NAT TRAVERSAL --------------------------------------
                  When investigating existing NAT traversal
                  techniques, we determined that none of them can be
                  used in all scenarios.------------------------------
                  FIELD TEST ON NAT TRAVERSAL-------------------------
                  This section presents the results of a field test
                  investigating 185 NATs in the wild.-----------------
                  50.27 percent of our tested NATs supported a direct
                  connection for UDP},
  keywords =     {IP networks;peer-to-peer computing;IP addresses;NAT
                  traversal techniques;asymmetric
                  connection;interactive connectivity
                  establishment;network address translation
                  devices;peer-to-peer
                  application;Filtering;Ice;Internet;Network address
                  translation;Peer to peer
                  computing;Protocols;Standardization;TCPIP;Terminology;Testing},
  doi          = {10.1109/MNET.2008.4626227},
  ISSN         = {0890-8044},
  month = 	 {September},
}

@Article{ICE-on-mobiles,
  author = 	 {Chien-Chun Huang-Fu and
                  Yi-Bing Lin and
		  Rao, H.},
  title = 	 {IP2P: a peer-to-peer system for mobile devices},
  journal = 	 {Wireless Communications, IEEE},
  year = 	 {2009},
  volume = 	 {16},
  number = 	 {2},
  pages = 	 {30-36},
  abstract =     {Peer-to-peer communications is a major trend in
                  wireless Internet. In a P2P system, the calling peer
                  must identify the network address of the called peer
                  before establishing a P2P connection. This article
                  proposes iP2P, a hybrid P2P system for mobile
                  devices. iP2P utilizes the short message service as
                  the control protocol to identify the address of the
                  called peer. Our approach provides an efficient
                  identification mechanism without the requirement for
                  the maintenance of a centralized registrar server in
                  a hybrid P2P system. We also show how iP2P can
                  integrate effectively with the existing network
                  address translation traversal mechanisms to solve
                  the private IP address
                  issue.------------------------
                  -----------------------------------------------------
                  Logically, the peers establish P2P connections
                  directly with each other without passing through
                  network
                  servers.------------------------------------- iP2P
                  SYSTEM ARCHITECTURE----------------------------- For
                  User Datagram Protocol (UDP) applications (e.g.,
                  Voice over IP) implemented in iP2P, the NAT
                  traversing issue is solved by the
                  interactive-connectivity-establishment (ICE)
                  mechanism [5].  },
  keywords =     {Internet;mobile computing;peer-to-peer
                  computing;protocols;centralized registrar
                  server;control protocol;hybrid P2P
                  system;iP2P;mobile devices;network address
                  translation traversal mechanisms;peer-to-peer
                  communications;peer-to-peer system;private IP
                  address;short message service;wireless Internet;Base
                  stations;Communication system control;Energy
                  consumption;IP networks;Message service;Multiaccess
                  communication;Network servers;Peer to peer
                  computing;Sockets;Telephony},
  doi =          {10.1109/MWC.2009.4907557},
  ISSN =         {1536-1284},
  month = 	 {April}
}

@Article{VoIP-STUN-TURN-ICE,
  author = 	 {Ying-Dar Lin and
                  Chien-Chao Tseng and
		  Cheng-Yuan Ho and
		  Yu-Hsien Wu},
  title = 	 {How NAT-compatible are VoIP applications?},
  journal = 	 {Communications Magazine, IEEE},
  year = 	 {2010},
  volume = 	 {48},
  number = 	 {12},
  pages = 	 {58-65},
  month = 	 {December},
  abstract =     {Today, the Internet is very diversified, further
                  complicating the classic NAT traversal problems. In
                  order to solve these problems, there are many
                  proposed methods classified into two categories. One
                  enhances the NAT traversal techniques of
                  applications, and the other tries to modify the
                  behavior of NATs. In this article we focus on the
                  former because NATs have been installed, and their
                  behavior cannot be altered through endpoint
                  users. Accordingly, in order to test NAT traversal
                  techniques of five VoIP applications (Skype, MSN,
                  Google Talk, X-Lite, and Linphone), three network
                  topologies have been designed with two endpoints
                  behind the same, different, or multilevel
                  NATs. Through a series of experiments and from the
                  experiment results, we observe that these VoIP
                  applications use some traversal techniques, such as
                  NAT mappedaddress probe, peer discovery, path check,
                  and relay first, proposed by STUN, TURN, and ICE to
                  make a direct connection when endpoints are behind
                  the same or different NATs with independent mapping
                  rules. However, with multilevel NATs, no endpoints
                  can establish a direct connection when they use the
                  above mentioned techniques, even if hairpin behavior
                  is supported by NATs.-------------------------------
                  The NAT techniques gain more widespread deployment
                  than IPv6. However, they introduce NAT traversal
                  problems. An internal node (IN) behind an NAT router
                  cannot be contacted by an external node (EN) unless
                  the IN initiates the communication
                  first. Furthermore, it becomes worse that two nodes
                  cannot directly communicate with each other when
                  both nodes are behind different NATs.--------------
                  In order to operate well behind NATs, VoIP
                  applications use two different ways to make a
                  connection. One is through direct peer-to-peer
                  connections, and the other is through a machine with
                  a public IP (i.e., a third party). Although the
                  latter allows VoIP applications to work behind NATs,
                  it may lead to other problems like high bandwidth
                  cost, server overloading, and packet delay, which
                  are especially harmful to real-time P2P applications
                  such as voice over IP (VoIP) [4]. Accordingly, in
                  this article we pay more attention to the ability of
                  VoIP applications establishing direct peer-to-peer
                  connections through NATs than the relayed
                  peer-to-peer connections. --------------------------
                  Several NAT traversal protocols have been proposed,
                  such as Session Traversal Utilities for NAT (STUN)
                  [5] [6] [7], Traversal Using Relays around NAT
                  (TURN) [8], and Interactive Connectivity
                  Establishment (ICE) [9]. STUN is a protocol an IN
                  can use to detect its NAT type and mapped-address
                  (i.e., external global IP address and port number),
                  while TURN assists an IN and a corresponding EN in
                  relaying packets; ICE, on the other hand, makes use
                  of both STUN and TURN to check possible connection
                  between two nodes.---------------------------------
                  In this article we aim to discuss whether five VoIP
                  applications establish direct peer-to-peer
                  connections behind NATs in some typical network
                  topologies, and whether VoIP applications have
                  developed their own NAT traversal technologies
                  (NTTs) or shared common behaviors among them.------
                  LITERATURE REVIEW----------------------------------
                  STUN is a protocol that allows applications to
                  discover the presence and rules of NATs between them
                  and the public Internet. It also provides the
                  ability for applications to determine the external
                  global addresses allocated to them by NATs.--------
                  TURN is a protocol that allows the host to
                  communicate with relays so that it can exchange
                  packets with its peers using relays and resolves the
                  NAT traversal problem which cannot be solved by
                  STUN.----------------------------------------------
                  EXPERIMENT DESIGN AND RESULTS----------------------
                  Google Talk, MSN, Skype, X-Lite, and Linphone—are
                  chosen.3 These five VoIP applications may not
                  directly use SIP, STUN, TURN, or ICE, but the
                  essences of the technologies they use are similar to
                  that of SIP, STUN, TURN, and ICE. ------------------
                  No VoIP Application Can Traverse Multi-level NAT
                  Devices.--------------------------------------------},
  keywords =     {Filtering;IP networks;Internet telephony;Peer to
                  peer computing;Protocols;Relays;Servers},
  doi =          {10.1109/MCOM.2010.5673073},
  ISSN =         {0163-6804}
}

@Article{Using-ICE,
  author = 	 {Cheng-Yuan Ho and
                  Fu-Yu Wang and
		  Chien-Chao Tseng and
		  Ying-Dar Lin},
  title = 	 {NAT-Compatibility Testbed: An Environment to Automatically Verify Direct Connection Rate},
  journal = 	 {Communications Letters, IEEE},
  year = 	 {2011},
  volume =       {15},
  number =       {1},
  pages =        {4-6},
  abstract =     {In this article, an NAT-compatibility testbed is
                  designed to automatically conduct the repeated
                  experiments, collect the test results, and verify
                  the direct connection rate (DCR) of any NAT
                  traversal programs. Achieving a high DCR is
                  important because using relays may unnecessarily
                  increase the bandwidth cost, processing load of the
                  relay servers, and the end-to-end packet delay. The
                  NAT-compatibility testbed is constructed with 4
                  components: two peers, an automatic execution
                  mechanism, NAT devices, and signaling/intermediate
                  servers such as STUN, TURN, and SIP. It is also
                  called the fully meshed testbed because the test
                  result of all NAT combinations is a square. It
                  measures the DCR of ICE, KeyStone, and PJNATH as
                  53.7\%, 59.87\%, and 50.93\%,
                  respectively. Experimental results show that
                  asymmetric and unexpected direct connectivity check
                  results occur in the real Internet. In order to
                  enhance NAT traversal capability, the findings, like
                  "port prediction" and "call-role sensitivity
                  problem," are also described in the experimental
                  results.----------------------------------------------
                  NETWORK address translation (NAT) is a common
                  solution to the IP address depletion problem of
                  Internet Protocol version 4 (IPv4). The basic NAT
                  concept is that it maps an address in one realm to
                  an address in another, while providing transparent
                  routing for the hosts behind the NAT called internal
                  hosts [1]. Traditional NATs adopt network address
                  port translation (NAPT) and can translate many
                  internal network addresses and their transport ports
                  into a single external network address and many
                  transport ports, called mapped-addresses. Thus, with
                  NAPT, an NAT can serve many internal hosts in a
                  private network with a public IP address.  However,
                  an NAT also introduces the NAT traversal problem. A
                  host external to an NAT can not originate
                  connections to an internal host unless the NAT has
                  previously established a mapped-address for the
                  internal host. Moreover, an NAT may employ filtering
                  rules to block unauthorized inbound
                  traffics. -------- Several protocols have been
                  proposed to facilitate NAT traversal. Session
                  Traversal Utilities for NAT (STUN) [2], [3] provides
                  a protocol that allows an internal host to discover
                  the presence and type of its NAT and
                  mapped-address. Traversal Using Relays around NAT
                  (TURN) [4] is a protocol that allows two hosts to
                  control the operation of the relay and exchange
                  packets with each other through the
                  relay. Interactive Connectivity Establishment (ICE)
                  [5] makes use of both STUN and TURN for any two
                  peers to discover and exchange three candidate
                  transport addresses including host (itself), mapped
                  (on the NAT), and relayed (on the relay server)
                  transport addresses. Furthermore, it also provides a
                  connectivity check algorithm that two hosts can use
                  to determine and agree on which candidate pair to
                  use for NAT traversal. Therefore, ICE is currently
                  the most promising NAT traversal technique.---------
                  NAT TYPES AND NAT-COMPATIBILITY TESTBED-------------
                  NATs can be classified into four types: full cone,
                  address restricted cone, port restricted cone, and
                  symmetric [2], according to the mapping and
                  filtering rules1. All cone NATs have the mapping
                  rule that all requests from the same internal
                  transport address are mapped to the same
                  mapped-address; whereas, in a symmetric NAT each
                  request from the same internal transport address to
                  a specific remote transport address is mapped to a
                  unique mapped-address. A full cone NAT allows any
                  external host to send packets to an internal host if
                  the NAT already has a mapped-address for that
                  internal host.--------------------------------------
                  However, an address restricted cone NAT allows an
                  external host with a particular IP address to send
                  packets to a mapped-address only if the NAT had
                  previously sent a packet with the mapped-address to
                  the IP address. A port restricted cone NAT is like a
                  restricted cone NAT, but the restriction includes
                  port numbers. A symmetric NAT adopts the same
                  filtering rule as a port restricted cone NAT.-------
                  Figure 1 summarizes the cases where ICE should
                  establish a direct connection under various NAT
                  combinations.---------------------------------------
                  Among the various NAT types, port restricted and
                  symmetric NATs employ the most stringent filtering
                  rule. However, when both peers are behind the port
                  restricted NATs they still can establish a direct
                  connection because both can initiate a connectivity
                  check for the same mapped-address pair, and at least
                  one of them will pass through the NAT at the other
                  end. On the other hand, when one peer is behind a
                  symmetric NAT and the other peer is behind a port
                  restricted or symmetric NAT, it is not easy for the
                  two peers to establish a direct connection [9]. This
                  is because, for each outgoing connection of an
                  internal host, symmetric NATs assign a unique
                  mapped-address.------------------------------------
                  EXPERIMENTAL RESULTS ------------------------------
                  From experimental results, we could observe that,
                  out of the 324 possible combinations, the DCR of
                  ICE, KeyStone, and PJNATH is 53.7\% (i.e., 174
                  direct connections), 59.87\% (194), and
                  50.93\%(165), respectively. Furthermore, the DCR
                  will be increased when the asymmetric direct
                  connection problem and call-role sensitivity problem
                  are solved or more powerful port prediction
                  mechanism is developed. ----------------------------
                  CONCLUSIONS},
  keywords =     {IP networks;Internet;testing;Internet;NAT traversal
                  capability;NAT traversal program;NAT-compatibility
                  testbed;automatic execution mechanism;bandwidth
                  cost;call-role sensitivity problem;direct connection
                  rate;direct connectivity check;end-to-end packet
                  delay;network address translation;port
                  prediction;relay server;signaling/intermediate
                  server;IP networks;Ice;Logic
                  gates;Protocols;Relays;Sensitivity;Servers;NAT;NAT
                  traversal;direct connection;testbed},
  doi =          {10.1109/LCOMM.2010.102810.101700},
  ISSN =         {1089-7798},
  month =        {January}
}

% Callee FC AR PR SM
% FC     Ok Ok Ok Ok
% AR     Ok Ok Ok Ok
% PR     Ok Ok Ok -
% SM     Ok Ok -  -

@Article{Extra-candidate-connectivity-check-in-ICE,
  author = 	 {Cheng-Yuan Ho and
                  Chien-Chao Tseng and
		  Fu-Yu Wang and
		  Jui-Tang Wang and
		  Ying-Dar Lin},
  title = 	 {To Call or To Be Called Behind NATs is Sensitive in
                  Solving the Direct Connection Problem},
  journal = 	 {Communications Letters, IEEE},
  year =         {2011},
  volume =       {15},
  number =       {1},
  pages =        {94-96},
  abstract =     {In this article, we first depict the call-role
                  sensitivity problem in Network Address Translation
                  (NAT) traversal, and then propose an approach to
                  resolving the problem. The problem is whether a
                  direct connection can be found between two peers
                  across NATs mainly depends on the NAT type at the
                  caller's side. We propose the extra-candidate
                  connectivity check where both peers initiate a
                  direct connectivity check to eliminate the effect of
                  the call role. We have implemented the
                  extra-candidate connectivity check and conducted
                  experiments with 18 different NATs. Experimental
                  results show that our approach can indeed resolve
                  the call-role sensitivity problem, and maximize the
                  direct connectivity rate (DCR) which is improved by
                  18.71\% from the original scheme.-------------------
                  Quick Preview Figures Full Text Footnotes References
                  Authors Cited By Keywords Corrections SECTION I
                  INTRODUCTION IN this paper, we present the call-role
                  sensitivity problem that may occur when two peers
                  try to establish a peer-topeer (P2P) direct
                  connection across Network Address Translation (NAT)
                  devices, and then propose a mechanism to resolve the
                  problem. The call-role sensitivity problem is
                  whether a P2P direct connection can be found between
                  two peers behind different NATs mainly depends on
                  the NAT at the caller's side.  NAT is a common
                  solution to the IP address depletion problem of
                  Internet Protocol version 4 (IPv4). The basic
                  concept of NAT is to map an address of one realm to
                  an address of another, while also providing
                  transparent routing for the hosts behind an NAT,
                  henceforth referred to as internal hosts
                  [1]. Traditional NAT adopts Network Address Port
                  Translation (NAPT) and can translate many internal
                  network addresses and their transport ports into a
                  single external network address and many transport
                  ports, hereafter referred to as
                  mapped-addresses. Therefore, with NAPT, an NAT can
                  serve many internal hosts in a private network with
                  a single external public IP address.
                  --------------- Several such protocols have been
                  proposed to facilitate NAT traversal. Session
                  Traversal Utilities for NAT (STUN) [2], [3] is a
                  protocol that allows an internal host to discover
                  the presence and type of its NAT and
                  mapped-address. In certain situations, it is
                  necessary for two hosts behind NATs to use an
                  intermediate node as a communication
                  relay. Traversal Using Relays around NAT (TURN) [4]
                  is a protocol that allows two hosts to control the
                  operation of the relay and to exchange packets with
                  its peers through the relay. Interactive
                  Connectivity Establishment (ICE) [5] makes use of
                  both STUN and TURN for any two peers to discover and
                  exchange three candidate transport addresses
                  including host (itself), mapped (on the NAT), and
                  relayed (on the relay server) transport
                  addresses. Moreover, it also provides a connectivity
                  check algorithm for two hosts to determine and agree
                  on which candidate pair to use for NAT
                  traversal. Hence, ICE is currently the most
                  promising NAT traversal technique.------------------
                  However, our experiments show that the role of peers
                  affects the ICE connectivity check result and makes
                  ICE fail to discover a direct connection which
                  indeed exists between two peers. Failure in direct
                  connection tests suggests the use of a relay to
                  forward packets on behalf of two peers. The use of
                  relays may unnecessarily increase the bandwidth cost
                  and processing load of the relay servers, and even
                  worse the endto-end packet delay, which is
                  especially harmful to real-time P2P applications
                  [6].-----------------------------------------------
                  NAT TYPES AND CALL-ROLE SENSITIVITY PROBLEM--------
                  NATs can be classified into four NAT types: full
                  cone, address restricted cone, port restricted cone,
                  and symmetric [2], according to the mapping and
                  filtering rules. All cone NATs have the mapping rule
                  that all requests from the same internal transport
                  address are mapped to the
                  samemapped-address. Whereas, a symmetric NAT is one
                  where each request from the same internal transport
                  address to a specific remote transport address is
                  mapped to a unique mapped-address. A full cone NAT
                  allows any external host sends packets to an
                  internal host if the NAT already has a
                  mapped-address for the internal host. However, an
                  address restricted cone NAT allows an external host
                  with a particular IP address sends packets to a
                  mapped-address only if the NAT had sent a packet
                  with the mapped-address to that IP address before. A
                  port restricted cone NAT is like a restricted cone
                  NAT, but the restriction includes port numbers. A
                  symmetric NAT adopts the same filtering rule as port
                  restricted cone
                  NAT.--------------------------------- Accordingly,
                  whether two hosts behind different NATs can
                  establish a direct connection depends on which host
                  initiates the communication first. For example,
                  suppose host1 and host2 are behind a full cone NAT
                  and a port restricted NAT, respectively, and know
                  each other's mapped-address by some signaling
                  protocol such as Session Initiation Protocol (SIP)
                  or STUN. The host1 can not establish a direct
                  connection to host2 if host1 initiates the
                  communication first because the packets sent by
                  host1 will be dropped by the port restricted NAT of
                  host2. However, because of the loose restriction
                  rule of the full cone NAT, host2 can establish a
                  direct connection to host1 when host2 initiates the
                  communication first [7]. ICE resolves the above
                  problem by having each of the two hosts initiate a
                  connectivity check for each candidate pair. Figure 1
                  summarizes the cases where ICE can establish a
                  direct connection theoretically under various NAT
                  combinations.---------------------------------------
                  Among various NAT types, port restricted and
                  symmetric NATs employ the most stringent filtering
                  rule. However, when both peers are behind the port
                  restricted NATs they still can establish a direct
                  connection because both of them initiate a
                  connectivity check for the same mapped-address pair,
                  and the latter one or both (if they initiate at the
                  same time) will pass through the other end's
                  NAT. However, when one peer is behind a symmetric
                  NAT and the other peer is behind a port restricted
                  or a symmetric NAT, it is impossible for the two
                  peers to establish a direct connection [8]. The
                  reason is that symmetric NATs assign a new
                  mapped-address for each outgoing connection of an
                  internal host, and the host can not foresee the
                  mapped-address and notify the corresponding host in
                  advance via a third party signaling server. Thus,
                  the request from new mapped-address will be blocked
                  by the peer's NAT.----------------------------------
		  },
  keywords =     {telecommunication network routing;DCR;NAT
                  traversal;call-role sensitivity problem;direct
                  connection problem;direct connectivity
                  rate;extra-candidate connectivity check;network
                  address translation;IP networks;Ice;Peer to peer
                  computing;Protocols;Relays;Sensitivity;Servers;NAT;NAT
                  traversal;direct connection},
  doi =          {10.1109/LCOMM.2010.102810.101471},
  ISSN =         {1089-7798},
  month =        {January}
}

% Callee FC AR PR SM
% FC     Ok Ok Ok Ok
% AR     Ok Ok Ok Ok
% PR     Ok Ok Ok -
% SM     Ok Ok -  -

